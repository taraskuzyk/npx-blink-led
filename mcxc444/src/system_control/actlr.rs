# [doc = "Register `ACTLR` reader"] pub type R = crate :: R < ActlrSpec > ; impl core :: fmt :: Debug for R { fn fmt (& self , f : & mut core :: fmt :: Formatter) -> core :: fmt :: Result { write ! (f , "{}" , self . bits ()) } } # [doc = "Auxiliary Control Register,\n\nYou can [`read`](crate::Reg::read) this register and get [`actlr::R`](R). See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct ActlrSpec ; impl crate :: RegisterSpec for ActlrSpec { type Ux = u32 ; } # [doc = "`read()` method returns [`actlr::R`](R) reader structure"] impl crate :: Readable for ActlrSpec { } # [doc = "`reset()` method sets ACTLR to value 0"] impl crate :: Resettable for ActlrSpec { const RESET_VALUE : u32 = 0 ; }